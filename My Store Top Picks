
// TopPicksJailin.jsx
// Single-file React component for an affiliate storefront called "TOP PICKS JAILIN"
// - Tailwind CSS classes used (no import necessary if your project has Tailwind configured)
// - Uses shadcn/ui components optionally; kept generic so it runs in any React app
// - Replace sampleProducts array with real affiliate data (title, price, image, affiliateUrl, store)
// - This component is export default so you can drop it in a Next.js or CRA project

import React, { useState, useMemo } from "react";

const sampleProducts = [
  {
    id: "p1",
    title: "Auriculares inalámbricos X-Beat",
    price: 49.99,
    rating: 4.5,
    store: "Amazon",
    category: "Electrónica",
    image: "https://via.placeholder.com/360x240?text=Auriculares",
    affiliateUrl: "https://www.amazon.com/dp/EXAMPLE?tag=tu-affiliate-id"
  },
  {
    id: "p2",
    title: "Luminaria LED para escritorio",
    price: 29.99,
    rating: 4.2,
    store: "AliExpress",
    category: "Hogar",
    image: "https://via.placeholder.com/360x240?text=Lampara",
    affiliateUrl: "https://www.aliexpress.com/item/EXAMPLE?aff=tu-affiliate-id"
  },
  {
    id: "p3",
    title: "Mochila urbana resistente al agua",
    price: 69.0,
    rating: 4.7,
    store: "eBay",
    category: "Accesorios",
    image: "https://via.placeholder.com/360x240?text=Mochila",
    affiliateUrl: "https://www.ebay.com/itm/EXAMPLE?campid=tu-affiliate-id"
  }
];

export default function TopPicksJailin({ initialProducts = sampleProducts }) {
  const [query, setQuery] = useState("");
  const [category, setCategory] = useState("Todas");
  const [sort, setSort] = useState("relevance");
  const [products] = useState(initialProducts);

  const categories = useMemo(() => {
    const cats = new Set(products.map(p => p.category));
    return ["Todas", ...Array.from(cats)];
  }, [products]);

  const filtered = useMemo(() => {
    let list = products.filter(p => {
      const matchQuery = p.title.toLowerCase().includes(query.toLowerCase()) || p.store.toLowerCase().includes(query.toLowerCase());
      const matchCategory = category === "Todas" ? true : p.category === category;
      return matchQuery && matchCategory;
    });

    if (sort === "price-asc") list.sort((a,b)=>a.price-b.price);
    if (sort === "price-desc") list.sort((a,b)=>b.price-a.price);
    if (sort === "rating") list.sort((a,b)=>b.rating-a.rating);

    return list;
  }, [products, query, category, sort]);

  function AffiliateButton({ url }){
    return (
      <a
        href={url}
        target="_blank"
        rel="noopener noreferrer"
        className="inline-block px-3 py-2 bg-gradient-to-r from-purple-600 to-indigo-600 text-white rounded-md shadow hover:scale-[1.01] transition-transform text-sm"
      >
        Comprar ahora
      </a>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <header className="max-w-6xl mx-auto mb-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-extrabold tracking-tight">TOP PICKS <span className="text-indigo-600">JAILIN</span></h1>
            <p className="text-sm text-gray-600 mt-1">Tu tienda de afiliados — productos seleccionados de muchas tiendas</p>
          </div>
          <nav className="flex items-center gap-4">
            <a className="text-sm text-gray-700 hover:text-indigo-600" href="#">Inicio</a>
            <a className="text-sm text-gray-700 hover:text-indigo-600" href="#productos">Productos</a>
            <a className="text-sm text-gray-700 hover:text-indigo-600" href="#contacto">Contacto</a>
          </nav>
        </div>

        <div className="mt-4 grid grid-cols-1 md:grid-cols-3 gap-3 items-center">
          <div className="md:col-span-2">
            <label className="sr-only">Buscar</label>
            <input
              value={query}
              onChange={(e)=>setQuery(e.target.value)}
              placeholder="Busca por producto o tienda (ej. auriculares, Amazon)"
              className="w-full rounded-lg border border-gray-200 px-4 py-2 shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-300"
            />
          </div>

          <div className="flex gap-2">
            <select value={category} onChange={e=>setCategory(e.target.value)} className="rounded-lg border border-gray-200 px-3 py-2 shadow-sm">
              {categories.map(c => <option key={c} value={c}>{c}</option>)}
            </select>

            <select value={sort} onChange={e=>setSort(e.target.value)} className="rounded-lg border border-gray-200 px-3 py-2 shadow-sm">
              <option value="relevance">Más relevantes</option>
              <option value="price-asc">Precio: bajo a alto</option>
              <option value="price-desc">Precio: alto a bajo</option>
              <option value="rating">Mejor valorados</option>
            </select>
          </div>
        </div>
      </header>

      <main className="max-w-6xl mx-auto" id="productos">
        <section className="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {filtered.length === 0 && (
            <div className="col-span-full text-center text-gray-500 p-8 border rounded">No se encontraron productos. Prueba otra búsqueda.</div>
          )}

          {filtered.map(product => (
            <article key={product.id} className="bg-white rounded-2xl shadow-sm overflow-hidden border border-gray-100 flex flex-col">
              <div className="aspect-[4/3] bg-gray-100">
                <img src={product.image} alt={product.title} className="w-full h-full object-cover" />
              </div>

              <div className="p-4 flex-1 flex flex-col">
                <div className="flex items-start justify-between">
                  <h3 className="text-sm font-semibold leading-snug">{product.title}</h3>
                  <div className="text-xs text-gray-500">{product.store}</div>
                </div>

                <p className="mt-2 text-lg font-bold">${product.price.toFixed(2)}</p>

                <div className="mt-3 flex items-center justify-between">
                  <div className="text-sm text-gray-600">⭐ {product.rating}</div>
                  <div className="flex gap-2 items-center">
                    <AffiliateButton url={product.affiliateUrl} />
                    <a
                      href={`/share?product=${encodeURIComponent(product.id)}`}
                      className="inline-block text-xs px-2 py-1 border rounded text-gray-700 hover:bg-gray-50"
                      title="Copiar enlace para redes"
                    >
                      Compartir
                    </a>
                  </div>
                </div>

                <div className="mt-3 text-xs text-gray-400">Categoría: {product.category}</div>
              </div>
            </article>
          ))}
        </section>

        <footer className="mt-10 text-center text-sm text-gray-500" id="contacto">
          <p>© {new Date().getFullYear()} TOP PICKS JAILIN — Sitio afiliado. Al comprar, seremos compensados por las tiendas asociadas.</p>
        </footer>
      </main>
    </div>
  );
}
